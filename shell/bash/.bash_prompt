#!/bin/bash

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0;                 # reset colors
  bold=$(tput bold);
	reset=$(tput sgr0);

  black=$(tput setaf 235);
	blue=$(tput setaf 33);
	cyan=$(tput setaf 37);
	green=$(tput setaf 64);
  orange=$(tput setaf 166);
	purple=$(tput setaf 141);
	red=$(tput setaf 124);
	violet=$(tput setaf 61);
	white=$(tput setaf 254);
	yellow=$(tput setaf 136);
	magenta=$(tput setaf 125);
else
  bold='';
  reset="\e[0m";
 
  black="\e[1;30m";
  blue="\e[1;34m";
  cyan="\e[1;36m";
  green="\e[1;32m";
  orange="\e[1;33m";
  purple="\e[1;35m";
  red="\e[1;31m";
  violet="\e[1;35m";
  white="\e[1;37m";
  yellow="\e[1;33m";
	magenta="\e[1;35m";
fi


function git_info() {
	# check if we're in a git repo
	git rev-parse --is-inside-work-tree &>/dev/null || return

	# quickest check for what branch we're on
	branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

	# check if it's dirty (via github.com/sindresorhus/pure)
	dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

	echo $white" on "$purple$branch$dirty
}

# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
  username="${red}";
else
 	username="${violet}";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
  hostname="${bold}${red}";
else
  hostname="${orange}";
fi;

# Set the prompt string.
PS1="\[\033]0;\w\007\]";                                 # terminal title (set to the current working directory)
PS1+="\[${bold}\]";                                      # newline
PS1+="\[${username}\]\u";                                # username
PS1+="\[${white}\] at ";                                 # at
PS1+="\[${hostname}\]\h";                                # hostname
PS1+="\[${white}\] in ";                                 # in
PS1+="\[${green}\]\w";                                   # working directory
PS1+="\$(git_info)";                                     # Git repository info
PS1+="\n";                                               # newline
PS1+="\[${white}\]\$ \[${reset}\]";                      # Reset color
