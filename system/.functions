#!/usr/bin/env bash
# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$_";
}

# Generate ssh key
function ssh-generate-key() {
  local email="$2" key="$1";
 
  # Use git global config if email value is empty
  if [ -z "$email" ]; then
	  email=$(git config --global user.email);
  fi

  if [ -z "$key" ]; then
    echo "Please supply name of the ssh key";
  else
    ssh-keygen -t rsa -b 4096 -C "$email" -N "" -f ~/.ssh/"$key";
    pbcopy <  ~/.ssh/"$key".pub
  fi
}

# Simple Calculator
function calc() {
  echo "$*" | bc -l;
}

cp_p () {
  rsync -WavP --human-readable --progress "$1" "$2";
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# some directories, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
  tree -aC -I '.git|node_modules|bower_components|.gradle|.idea|.svn|.sass-cache' --dirsfirst "$@" | less -FRNX;
}

# Param1: record type
# Param2: dns record
function digs() {
  dig -t "$1" "$2" +short;
}

# Removes all containers
function docker-remove-containers {
  local containers="";
	containers="$(docker ps -a -q)";
  [ ! -z "$containers" ] && docker rm "$containers";
	[ -z "$containers" ] && echo "No containers to clean!";
}

# Removes all images
function docker-remove-images {
  local images="";
	images="$(docker images -q)";
  [ ! -z "$images" ] && docker rmi "$images";
	[ -z "$images" ] && echo "No images to clean!";
}

# Removes all docker container and images
function docker-spring-clean {
  docker-clean-all-containers;
	docker-clean-all-images;
}

# Removes all dangling docker images
function docker-remove-dangling {
  local danglers="";
  danglers="$(docker images -f 'dangling=true' -q)";
  [ ! -z "$danglers" ] && docker rmi "$danglers";
  [ -z "$danglers" ] && echo "No dangling images!"
}



# Switch between platforms
case $(uname) in
  'Darwin')

    # Open man page as PDF (OS X Only)
    function manpdf() {
      man -t "$1" | open -f -a /Applications/preview.app/;
    }
  ;;
  'Linux')

    # Does simple port check through tcp
    function portCheck() {
      local host="$1" port="$2";
	    (echo >/dev/tcp/${host}/${port}) &> /dev/null;
      if [ $? != 0 ]; then
        echo "The port ${white}${port}${reset} is ${red}closed${reset} on ${white}${host}${reset}";
      else
        echo "The port ${white}${port}${reset} is ${green}open${reset} on the host ${white}${host}${reset}";
      fi
    } 
  ;;
esac
